provider "aws"{
region = var.region
access_key = var.access_key
secret_key = var.secret_key
}

resource "aws_vpc" "sa-vpc" {
  cidr_block = "10.0.0.0/16"
  tags = {
    Name = "sa-vpc"
  }
}

resource "aws_subnet" "sa-subnet" {
  depends_on = [aws_vpc.sa-vpc]
  vpc_id     = aws_vpc.sa-vpc.id
  map_public_ip_on_launch = true
  cidr_block = "10.0.1.0/24"

  tags = {
    Name = "sa-subnet"
  }
}

resource "aws_route_table" "sa-route-table" {
  vpc_id = aws_vpc.sa-vpc.id
  tags = {
    Name = "sa-route-table"
  }
}

resource "aws_route_table_association" "a" {
  subnet_id      = aws_subnet.sa-subnet.id
  route_table_id = aws_route_table.sa-route-table.id
}

resource "aws_internet_gateway" "gw" {
 depends_on = [aws_vpc.sa-vpc]
 vpc_id = aws_vpc.sa-vpc.id

 tags = {
    Name = "gw"
  }
}

resource "aws_route" "r" {
  route_table_id            = aws_route_table.sa-route-table.id
  gateway_id = aws_internet_gateway.gw.id
  destination_cidr_block    = "0.0.0.0/0"
}


resource "aws_security_group" "mysg" {
  name = "mysg"
  description = "Allow TLS inbound traffic and all outbound traffic"
  vpc_id      = aws_vpc.sa-vpc.id
  dynamic "ingress"{
  for_each = var.ports
  iterator = port
  content{
   from_port         = port.value
   to_port           = port.value
   protocol       = "tcp"
   cidr_blocks      = ["0.0.0.0/0"]

  }
}

  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]

  }
}

resource "tls_private_key" "mykey" {
  algorithm = "RSA"
  rsa_bits  = 4096
}

resource "aws_key_pair" "web-key" {
  key_name = "web-key"

  public_key = tls_private_key.mykey.public_key_openssh


  provisioner "local-exec" {
    command = "echo '${tls_private_key.mykey.private_key_openssh}' > ./web-key.pem"
  }
}


resource "aws_instance" "myterraform" {
  ami           = var.amiid
  instance_type = var.instance_type
  key_name = aws_key_pair.web-key.key_name

  subnet_id = aws_subnet.sa-subnet.id
  security_groups = [aws_security_group.mysg.id]

  tags = {
    Name = "myterraform"
  }
}










# Outputs
output "vpc_id" {
  value = aws_vpc.sa-vpc.id
}

output "subnet_id" {
  value = aws_subnet.sa-subnet.id
}

output "internet_gateway_id" {
  value = aws_internet_gateway.gw.id
}

output "route_table_id" {
  value = aws_route_table.sa-route-table.id
}

output "security_group_id" {
  value = aws_security_group.mysg.id
}

